
#User dao ------------------------------------------
user.find.by.id = SELECT * FROM user WHERE id = ?
user.find.by.loginAndPassword = SELECT * FROM workshop.user WHERE login = ? AND password = ?
user.create = INSERT INTO user (login, password, role, name, name_ua, surname, surname_ua, email, phone_number) VALUES(?,?,?,?,?,?,?,?,?)

#Request dao ---------------------------------------
request.create = INSERT INTO request (product_category, device, description, creationDate, status, customer) VALUES (?, ?, ?, ?, ?, ?)
request.update = UPDATE request SET product_category = ?, device = ?, description = ?, creationDate = ?, status = ?, price = ?, \
  managerComment = ?, customer = ?, manager = ?, master = ?, feedback = ? WHERE id = ?
request.find.by.id = SELECT * FROM request WHERE id = ?
#request.find.by.id = SELECT id, product_category, device, description, creationDate, status, price, managerComment, customer, ifnull(manager, NULL), ifnull(master, NULL), ifnull(feedback, NULL) FROM request WHERE id = ?
request.find.all.by.user = SELECT * FROM request WHERE customer = ?
request.find.active.by.user = SELECT * FROM request WHERE customer = ? AND status IN(?,?,?)
request.find.by.one.status = SELECT * FROM request WHERE status = ?
request.find. = SELECT * FROM request WHERE status = ?
#request.find.new = SELECT id, product_category, device, description, creationDate, status, price, managerComment, customer, ifnull(manager, NULL) as manager, ifnull(master, NULL) as master, ifnull(feedback, NULL) as feedback FROM request WHERE status = ?
#request.update.price.and.managerComment.and.manager = UPDATE request SET price = ?, managerComment = ?, manager = ?, status = ? WHERE id = ?
request.update.accepted.or.declined = UPDATE request SET status = ?, price = ?, managerComment = ?, manager = ? WHERE id = ?
request.update.accepted.by.master = UPDATE request SET status = ?, master = ? WHERE id = ?

#Feedback dao --------------------------------------
feedback.find.by.id = SELECT * FROM feedback WHERE id = ?

